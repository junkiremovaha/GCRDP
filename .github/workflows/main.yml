name: GCRDP for cashvib

on:
  workflow_dispatch:
    inputs:
      code1:
        description: 'Enter the --code1 value for Chrome Remote Desktop'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 500  
    
    steps:
      - name: Enable Terminal Services and Firewall Rules
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      - name: Set Password for runneradmin
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      - name: Rename Computer to nono1321
        run: Rename-Computer -NewName "nono1321"
      # - name: Download and run Cashvib File
      #   run: |
      #     Invoke-WebRequest -Uri "https://github.com/jackricj/std1/raw/main/cash.exe" -OutFile "Cash.exe"
      #     Start-Process -FilePath "D:\a\GCRDP\GCRDP\Cash.exe" -ArgumentList "/S"
      
      - name: Download and Install Chrome Remote Desktop Host
        run: |
          Invoke-WebRequest https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi -OutFile chromeremotedesktophost.msi
          Start-Process msiexec.exe -ArgumentList '/i chromeremotedesktophost.msi /quiet /norestart' -Wait
          Start-Sleep -Seconds 50
          
      - name: Start powershell to enable remote desktop
        run: |
          # Start PowerShell script to launch Chrome Remote Desktop host
          Start-Process -FilePath "powershell.exe" -ArgumentList "-NoExit -Command & {& '${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe' --code='${{ github.event.inputs.code1 }}' --redirect-url='https://remotedesktop.google.com/_/oauthredirect' --name='nono1321'}"
          Start-Sleep -Seconds 10
          Add-Type -AssemblyName System.Windows.Forms
          [System.Windows.Forms.SendKeys]::SendWait("123456")
          Start-Sleep -Seconds 1
          [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")
          Start-Sleep -Seconds 1
          [System.Windows.Forms.SendKeys]::SendWait("123456")
          Start-Sleep -Seconds 1
          [System.Windows.Forms.SendKeys]::SendWait("{ENTER}")
          Start-Sleep -Seconds 5
          Start-Sleep -Seconds 2160
          
          while ($true) {
             echo "Keep-Alive"
             Start-Sleep -Seconds 60
          }
